





CREATE OR REPLACE PROCEDURE CREAR_CONTRIBUYENTE(P_NIF IN CURSO_CONTRIBUYENTES.NIF%TYPE, 
                                                P_NOM IN CURSO_CONTRIBUYENTES.NOMBRE%TYPE,
                                                P_AP1 IN CURSO_CONTRIBUYENTES.APELLIDO1%TYPE,
                                                P_AP2 IN CURSO_CONTRIBUYENTES.APELLIDO2%TYPE)
AS

BEGIN
   INSERT INTO CURSO_CONTRIBUYENTES (NOMBRE,
                                     APELLIDO1,
                                     APELLIDO2,
                                     NIF)
        VALUES (P_NOM,
                P_AP1,
                P_AP2,
                P_NIF);
END CREAR_CONTRIBUYENTE;
/



























CREATE OR REPLACE TRIGGER TR_BIU_CURSO_CONTRIBUYENTES
BEFORE INSERT OR UPDATE ON CURSO_CONTRIBUYENTES
FOR EACH ROW
BEGIN
   IF INSERTING THEN
      IF :NEW.ID IS NULL THEN
         :NEW.ID := GEN_CURSO_CONTRIBUYENTES.NEXTVAL;
      END IF;
      :NEW.USUARIO_CREA := USER;
      :NEW.F_CREA := SYSDATE;
   END IF;
   :NEW.USUARIO_MODI := USER;
   :NEW.F_MODI := SYSDATE;
   :NEW.NOMBRE_NORMALIZADO := NORMALIZA_NOMBRE(:NEW.NOMBRE, :NEW.APELLIDO1, :NEW.APELLIDO2);
   IF LENGTH(TRIM(:NEW.NOMBRE_NORMALIZADO)) < 2 THEN  
      RAISE_APPLICATION_ERROR(-20003, 'AL MENOS UNO DE LOS 3 ELEMENTOS DEL NOMBRE ES OBLIGATORIO');
   END IF;
   :NEW.NIF_NORMALIZADO := DAMENIF(:NEW.NIF);
END TR_BIU_CURSO_CONTRIBUYENTES;
/














CREATE OR REPLACE FUNCTION NORMALIZA_NOMBRE( P_NOM IN CURSO_CONTRIBUYENTES.NOMBRE%TYPE,
                                             P_AP1 IN CURSO_CONTRIBUYENTES.APELLIDO1%TYPE,
                                             P_AP2 IN CURSO_CONTRIBUYENTES.APELLIDO2%TYPE) RETURN CURSO_CONTRIBUYENTES.NOMBRE_NORMALIZADO%TYPE
IS
   V_DUMMY     VARCHAR2(32767);
   V_NOMBRE_N  CURSO_CONTRIBUYENTES.NOMBRE_NORMALIZADO%TYPE;
BEGIN
   --P_AP1
   V_DUMMY  := UPPER(TRIM(P_AP1));
   WHILE INSTR(V_DUMMY,'  ') > 0 
   LOOP
      V_DUMMY := REPLACE(V_DUMMY,'  ', ' ');
   END LOOP;
   V_NOMBRE_N := V_DUMMY;
   --P_AP2
   V_DUMMY  := UPPER(TRIM(P_AP2));
   WHILE INSTR(V_DUMMY,'  ') > 0 
   LOOP
      V_DUMMY := REPLACE(V_DUMMY,'  ', ' ');
   END LOOP;
   V_NOMBRE_N := V_NOMBRE_N||' '||V_DUMMY;
   --P_NOM
   V_DUMMY  := UPPER(TRIM(P_NOM));
   WHILE INSTR(V_DUMMY,'  ') > 0 
   LOOP
      V_DUMMY := REPLACE(V_DUMMY,'  ', ' ');
   END LOOP;
   V_NOMBRE_N := V_NOMBRE_N||', '||V_DUMMY;
   RETURN TRIM(V_NOMBRE_N);
END NORMALIZA_NOMBRE;
/

























   CREATE OR REPLACE FUNCTION BUSCA_CONTRIBUYENTE(P_NIF IN CURSO_CONTRIBUYENTES.NIF%TYPE) RETURN CURSO_CONTRIBUYENTES.ID%TYPE
   IS
      V_ID CURSO_CONTRIBUYENTES.ID%TYPE;
   BEGIN
      V_ID := 0;
      BEGIN
         SELECT ID INTO V_ID FROM CURSO_CONTRIBUYENTES WHERE NIF_NORMALIZADO = DAMENIF(P_NIF);
      EXCEPTION
         WHEN OTHERS THEN NULL;
      END;
      RETURN V_ID;
   END BUSCA_CONTRIBUYENTE;
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   



CREATE OR REPLACE PROCEDURE MODIFICA_CONTRIBUYENTE(P_NIF IN CURSO_CONTRIBUYENTES.NIF%TYPE, 
                                                   P_NOM IN CURSO_CONTRIBUYENTES.NOMBRE%TYPE,
                                                   P_AP1 IN CURSO_CONTRIBUYENTES.APELLIDO1%TYPE,
                                                   P_AP2 IN CURSO_CONTRIBUYENTES.APELLIDO2%TYPE)
AS
   V_ID CURSO_CONTRIBUYENTES.ID%TYPE;

   FUNCTION BUSCA_CONTRIBUYENTE(P_NIF IN CURSO_CONTRIBUYENTES.NIF%TYPE) RETURN CURSO_CONTRIBUYENTES.ID%TYPE
   IS
      V_ID CURSO_CONTRIBUYENTES.ID%TYPE;
   BEGIN
      V_ID := 0;
      BEGIN
         SELECT ID INTO V_ID FROM CURSO_CONTRIBUYENTES WHERE NIF_NORMALIZADO = DAMENIF(P_NIF);
      EXCEPTION
         WHEN OTHERS THEN NULL;
      END;
      RETURN V_ID;
   END BUSCA_CONTRIBUYENTE;
   
BEGIN
   V_ID := BUSCA_CONTRIBUYENTE (P_NIF);
   IF V_ID > 0 THEN
      UPDATE CURSO_CONTRIBUYENTES
         SET NOMBRE    = P_NOM, 
             APELLIDO1 = P_AP1, 
             APELLIDO2 = P_AP2
       WHERE ID = V_ID;
   END IF;
END MODIFICA_CONTRIBUYENTE;
/

